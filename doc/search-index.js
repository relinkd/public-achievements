var searchIndex = new Map(JSON.parse('[\
["achievement",{"doc":"Achievement Module","t":"CCHCCCHHIFFFNNNHNNNNNNHNNNNNNNNNNNNNNNNNOHONNNHONNNNNNNNNNHSSSSHHHHHHHFFGPIPFFNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["access","ecdsa","get_candid_pointer","logic","state","storable","caller","is_controller","CanisterId","PublicKeyReply","SignatureReply","SignatureVerificationReply","_ty","_ty","_ty","always_fail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_principals_message","clone","clone_into","fmt","fmt","fmt","from","from","from","id","id","id","idl_serialize","idl_serialize","idl_serialize","into","into","into","is_signature_valid","public_key","public_key_hex","serialize","serialize","serialize","sign","signature_hex","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","MEMORY_MANAGER","METADATA","PRINCIPAL_TO_ACHIEVEMENT_STATUS","PRINCIPAL_TO_HASH","_update_canister_metadata","get_achievement_metadata","get_principal_to_achievement_status_value","get_principal_to_hash_value","update_achievement_metadata","update_principal_to_achievement_status","update_principal_to_hash","AchievementMetadata","AchievementStatus","AchievementStatusEnum","Allowed","Memory","NotAllowed","PrincipalStorable","Signature","_ty","_ty","_ty","_ty","achievement_description","achievement_name","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","deserialize","eq","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_u8","id","id","id","id","idl_serialize","idl_serialize","idl_serialize","idl_serialize","into","into","into","into","into","partial_cmp","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string_from_u8","to_u8","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"achievement"],[6,"achievement::access"],[8,"achievement::ecdsa"],[59,"achievement::state"],[70,"achievement::storable"],[157,"std::os::raw"],[158,"ic_principal"],[159,"candid::types::internal"],[160,"getrandom::error"],[161,"core::result"],[162,"alloc::string"],[163,"core::fmt"],[164,"core::fmt"],[165,"serde::ser"],[166,"core::any"],[167,"core::cmp"],[168,"serde::de"],[169,"alloc::borrow"],[170,"core::option"]],"d":["This module provides access control functions for checking …","This module provides ECDSA-related functionality, …","","This module contains the logic for checking achievement …","This module manages the state of the achievement system, …","This module defines storable types and their …","Retrieves the caller’s principal ID.","Checks if the caller is a controller.","","Response containing the public key in hexadecimal format.","Response containing the signature in hexadecimal format.","Response indicating whether a signature is valid.","","","","","","","","","","","Builds a message string from the caller and identity …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Retrieves the public key for ECDSA.","","","","","Signs a message using ECDSA.","","","","","","","","","","","","Verifies a signature using ECDSA.","","","","","Updates the metadata of the achievement canister.","Retrieves the metadata of the achievement canister.","Retrieves the achievement status for a principal.","Retrieves the hash for a principal.","Updates the metadata of the achievement canister.","Updates the achievement status for a principal.","Updates the hash for a principal.","Metadata for an achievement.","Represents the status of an achievement.","Enum representing the status of an achievement.","","","","A wrapper for <code>Principal</code> to make it storable.","Represents a signature.","","","","","","","","","","","","","","","","","","","","","","","","Creates a default instance of <code>AchievementMetadata</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Converts a <code>u8</code> value to the corresponding enum variant.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Converts a <code>u8</code> value to a string representation of the enum …","Converts the enum variant to a <code>u8</code> value.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,12,11,15,0,12,11,15,12,11,15,0,11,11,12,11,15,12,11,15,12,11,15,12,11,15,12,11,15,15,0,12,12,11,15,0,11,11,12,11,15,12,11,15,12,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,27,0,0,20,23,22,21,20,20,27,20,23,22,21,27,20,23,22,21,20,23,22,20,23,22,23,20,20,23,22,21,23,21,27,20,23,22,21,20,23,22,21,27,20,23,22,21,20,23,22,21,27,20,23,22,21,23,21,20,23,22,21,20,23,22,27,27,27,20,23,22,21,27,20,23,22,21,27,20,23,22,21],"f":"``{{}b}```{{}d}{{}f}````{{}h}00{{{l{j}}}{{Ab{nA`}}}}{ce{}{}}00000{{dd}Ad}{AfAf}{{ce}n{}{}}{{AhAj}Al}{{AfAj}Al}{{AnAj}Al}{cc{}}00{{}B`}00{{Ahc}{{Ab{n}}}Bb}{{Afc}{{Ab{n}}}Bb}{{Anc}{{Ab{n}}}Bb};;;`{{}{{Ab{AhAd}}}}`{{Ahc}AbBd}{{Afc}AbBd}{{Anc}AbBd}{Ad{{Ab{AfAd}}}}`{ce{}{}}{c{{Ab{e}}}{}{}}00000{cBf{}}00{{AdAdAd}{{Ab{AnAd}}}}````{Bh{{Ab{BhAd}}}}{{}Bh}{d{{Ab{jAd}}}}{d{{Ab{BjAd}}}}3{{dBl}{{Ab{nAd}}}}{{dBj}{{Ab{nAd}}}}````````{{}h}000``::::::::::{BhBh}{BnBn}{BlBl}{{ce}n{}{}}00{{BnBn}C`}:{c{{Ab{Bh}}}Cb}{c{{Ab{Bn}}}Cb}{c{{Ab{Bl}}}Cb}{c{{Ab{Bj}}}Cb}{{BnBn}f}{{BjAj}Al}{cc{}}0000{{{Cd{{l{j}}}}}Bh}{{{Cd{{l{j}}}}}Bn}{{{Cd{{l{j}}}}}Bl}{{{Cd{{l{j}}}}}Bj}{jCf}{{}B`}000{{Bhc}{{Ab{n}}}Bb}{{Bnc}{{Ab{n}}}Bb}{{Blc}{{Ab{n}}}Bb}{{Bjc}{{Ab{n}}}Bb}{ce{}{}}0000{{BnBn}{{Ch{C`}}}}{{Bjc}AbBd}{Bh{{Cd{{l{j}}}}}}{Bn{{Cd{{l{j}}}}}}{Bl{{Cd{{l{j}}}}}}{Bj{{Cd{{l{j}}}}}}666{jAd}{Cfj}{c{{Ab{e}}}{}{}}000000000{cBf{}}0000","c":[],"p":[[8,"c_char",157],[5,"Principal",158],[1,"bool"],[5,"Type",159],[1,"u8"],[1,"slice"],[1,"unit"],[5,"Error",160],[6,"Result",161],[5,"String",162],[5,"SignatureReply",8],[5,"PublicKeyReply",8],[5,"Formatter",163],[8,"Result",163],[5,"SignatureVerificationReply",8],[5,"TypeId",159],[10,"Serializer",164],[10,"Serializer",165],[5,"TypeId",166],[5,"AchievementMetadata",70],[5,"Signature",70],[5,"AchievementStatus",70],[5,"PrincipalStorable",70],[6,"Ordering",167],[10,"Deserializer",168],[6,"Cow",169],[6,"AchievementStatusEnum",70],[6,"Option",170]],"b":[]}],\
["reputation_module",{"doc":"Reputation Module","t":"CHCCCCCCHHCCCGGPPPPGGPPPPPPPPGPPPPPPGPPPPPPPPPPPPPPPGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOFIPFIJPPPPPPFGFFGGFGGFFGIFGIPPPPPPPPPJFGNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONOOONNOOOOOOOONNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFPFIPFIPPPPPIFPFIPPPPPFIFGPFINNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOONNNNNNNNNNNNNNNOOOONOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNOONNNOOONNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNOOONNNNNNNNNOOOOOOOOOOOOOHHHHHHHHHHHFSSIFFFFNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNONNNNNNNNNNNNNNNOFNOONNNNNNNNNNNNNH","n":["access","get_candid_pointer","icrc_7","logic","state","storable","types","utils","caller","is_controller","errors","ext_types","types","ApprovalError","BurnError","CannotNotify","CantWrite","CreatedInFuture","Duplicate","ExtCommonError","ExtTransferError","GenericBatchError","GenericBatchError","GenericBatchError","GenericBatchError","GenericError","GenericError","GenericError","GenericError","InsertTransactionError","InsufficientBalance","InvalidId","InvalidRecipient","InvalidSpender","InvalidToken","InvalidToken","MintError","NonExistingTokenId","NonExistingTokenId","NonExistingTokenId","NotSetArchiveCanister","Other","Other","Rejected","RemoteError","SupplyCapReached","SyncPending","TemporaryUnavailable","TokenIdAlreadyExist","TokenIdMinimumLimit","TooOld","TooOld","TransferError","Unauthorized","Unauthorized","Unauthorized","Unauthorized","Unauthorized","Unexpected","_ty","_ty","_ty","_ty","_ty","_ty","_ty","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","id","id","id","id","id","id","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","error_code","error_code","message","message","tokens_ids","error_code","error_code","message","message","error_code","error_code","message","message","duplicate_of","error_code","error_code","ledger_time","message","message","AccountIdentifier","AccountIdentifierHex","Address","AllowanceArg","Balance","EXTENSIONS","Err","Err","Err","Err","Err","Err","ExtAllowanceArg","ExtAllowanceResult","ExtApproveArg","ExtBalanceArg","ExtBalanceResult","ExtBearerResult","ExtFungibleMetadataType","ExtMetadata","ExtMetadataResult","ExtMetadataType","ExtMintArg","ExtSupplyResult","ExtTokenIndex","ExtTransferArg","ExtTransferResult","Extension","Fungible","Nonfungible","Ok","Ok","Ok","Ok","Ok","Ok","Principal","TDS","TokenIdentifier","User","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","allowance","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decimals","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_principal","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","memo","metadata","metadata","metadata","name","new","notify","owner","owner","parse_token_identifier","parse_token_index","spender","spender","spender","subaccount","subaccount","symbol","to","to","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","token","token","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user","Approval","Approval","ApprovalArg","ApproveResult","Burn","BurnArg","BurnResult","Err","Err","Err","Err","Err","Icrc7TokenMetadata","InitArg","Mint","MintArg","MintResult","Ok","Ok","Ok","Ok","Ok","Standard","SyncReceipt","Transaction","TransactionType","Transfer","TransferArg","TransferResult","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","_ty","account","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","created_at_time","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","expires_at","expires_at","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_subaccount","from_subaccount","from_subaccount","from_subaccount","hash","icrc7_atomic_batch_transfers","icrc7_default_take_value","icrc7_description","icrc7_logo","icrc7_max_memo_size","icrc7_max_query_batch_size","icrc7_max_take_value","icrc7_max_update_batch_size","icrc7_name","icrc7_supply_cap","icrc7_symbol","id","id","id","id","id","id","id","id","id","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","idl_serialize","into","into","into","into","into","into","into","into","into","memo","memo","memo","memo","memo","minting_account","name","new","new","op","permitted_drift","serialize","serialize","serialize","spender","to","to","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_description","token_id","token_id","token_id","token_id","token_logo","token_name","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_window","txn_id","txn_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","from","from","from","from","tid","tid","tid","tid","to","to","to","to","_change_principal_achievement_sum_status_to_issued","_update_canister_metadata","change_permission_canister","get_achievement_metadata","get_principal_achievement_sum_status","get_reputation_module_metadata","get_supported_standards","increment_total_issued","is_canister_allowed","set_supported_standards","update_reputation_canister_metadata","CanisterPermission","MAX_KEY_SIZE","MAX_VALUE_SIZE","Memory","PrincipalSum","ReputationModuleMetadata","Standard","StorablePrincipal","_ty","_ty","_ty","_ty","achievement_collection","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","deserialize","deserialize","eq","eq","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","id","id","id","id","idl_serialize","idl_serialize","idl_serialize","idl_serialize","into","into","into","into","into","issuer_description","issuer_name","name","partial_cmp","partial_cmp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","total_issued","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","AchievementMetadata","_ty","achievement_description","achievement_name","borrow","borrow_mut","clone","clone_into","deserialize","from","id","idl_serialize","into","to_owned","try_from","try_into","type_id","build_principal_sum"],"q":[[0,"reputation_module"],[8,"reputation_module::access"],[10,"reputation_module::icrc_7"],[13,"reputation_module::icrc_7::errors"],[158,"reputation_module::icrc_7::errors::ApprovalError"],[163,"reputation_module::icrc_7::errors::BurnError"],[167,"reputation_module::icrc_7::errors::MintError"],[171,"reputation_module::icrc_7::errors::TransferError"],[177,"reputation_module::icrc_7::ext_types"],[508,"reputation_module::icrc_7::types"],[711,"reputation_module::icrc_7::types::TransactionType"],[723,"reputation_module::state"],[734,"reputation_module::storable"],[828,"reputation_module::types"],[845,"reputation_module::utils"],[846,"std::os::raw"],[847,"ic_principal"],[848,"candid::types::internal"],[849,"core::result"],[850,"serde::de"],[851,"core::fmt"],[852,"core::fmt"],[853,"core::any"],[854,"icrc_ledger_types::icrc1::account"],[855,"core::option"],[856,"alloc::string"],[857,"alloc::borrow"],[858,"core::hash"],[859,"alloc::vec"],[860,"icrc_ledger_types::icrc1::account"],[861,"core::cmp"]],"d":["This module provides access control functions for checking …","","","This module contains the logic for issuing achievements …","This module manages the state of the reputation module, …","This module defines storable types and their …","This module defines the types used in the reputation …","This module provides utility functions for the reputation …","Retrieves the caller’s principal ID.","Checks if the caller is a controller.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","Contains the error value","Contains the error value","Contains the error value","Contains the error value","","","","","","Contains the success value","Contains the success value","Contains the success value","Contains the success value","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Changes the status of a principal’s achievement to …","Updates the metadata of the reputation module.","Changes the permission of a canister.","Retrieves the metadata of an achievement.","Retrieves the status of a principal’s achievement.","Retrieves the metadata of the reputation module.","Retrieves the supported standards for the reputation …","Increments the total number of issued achievements.","Checks if a canister is allowed.","Sets the supported standards for the reputation module.","Updates the metadata of the reputation module.","Represents the permission status of a canister.","","","","Represents a sum of principal and achievement.","Metadata for the reputation module.","Represents a standard supported by the reputation module.","A wrapper for <code>Principal</code> to make it storable.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a default instance of <code>ReputationModuleMetadata</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata for an achievement.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Builds a string representation of a principal sum."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,14,5,5,0,0,5,6,7,8,5,6,7,8,0,10,14,5,6,9,10,0,5,6,7,14,9,10,10,14,8,14,6,8,8,5,6,0,5,6,7,8,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,5,6,7,8,9,10,5,8,9,10,14,14,5,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,5,6,7,8,9,10,14,5,6,7,8,9,10,14,5,6,7,8,9,10,14,66,67,66,67,68,69,70,69,70,71,72,71,72,73,74,75,76,74,75,0,0,22,0,0,0,24,26,30,31,35,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,24,26,30,31,35,37,22,0,0,0,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,28,23,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,33,21,32,34,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,32,33,34,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,23,21,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,23,32,33,36,33,32,23,27,29,20,20,27,28,29,23,28,33,23,36,21,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,23,25,27,28,29,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,25,0,42,0,0,42,0,0,77,78,79,80,81,0,0,42,0,0,77,78,79,80,81,0,0,0,0,42,0,0,42,43,44,45,46,48,54,47,49,47,43,42,43,44,45,46,48,54,47,49,42,43,44,45,46,48,54,47,49,42,43,44,45,46,47,42,43,44,45,46,47,44,42,43,44,45,46,48,47,49,47,47,49,42,43,44,47,42,43,44,45,46,48,54,47,49,43,47,44,45,46,49,47,48,48,48,48,48,48,48,48,48,48,48,42,43,44,45,46,48,54,47,49,42,43,44,45,46,48,54,47,49,42,43,44,45,46,48,54,47,49,43,44,45,46,49,48,54,43,47,43,48,42,43,47,49,44,45,43,47,42,43,44,45,46,47,45,44,45,46,49,45,45,42,43,44,45,46,48,54,47,49,42,43,44,45,46,48,54,47,49,48,43,43,42,43,44,45,46,48,54,47,49,54,82,83,84,85,82,83,84,85,82,83,84,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,64,59,61,59,63,62,64,59,61,63,62,64,59,61,63,62,64,59,63,62,64,59,63,64,59,62,64,59,61,63,64,63,62,64,59,61,63,62,64,59,61,62,64,59,61,62,64,59,61,63,62,64,59,61,59,59,61,63,64,63,62,64,59,61,63,62,64,59,59,63,62,64,59,61,63,62,64,59,61,63,62,64,59,61,61,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0],"f":"`{{}b}``````{{}d}{{}f}`````````````````````````````````````````````````{{}h}000000{ce{}{}}0000000000000{jj}{ll}{nn}{A`A`}{AbAb}{AdAd}{{ce}Af{}{}}00000{c{{Ah{j}}}Aj}{c{{Ah{A`}}}Aj}{c{{Ah{Ab}}}Aj}{c{{Ah{Ad}}}Aj}{c{{Ah{Al}}}Aj}{{AlAl}f}{{jAn}B`}{{A`An}B`}{{AbAn}B`}{{AdAn}B`}{{AlAn}B`}{cc{}}000000{{}Bb}000000{{jc}{{Ah{Af}}}Bd}{{lc}{{Ah{Af}}}Bd}{{nc}{{Ah{Af}}}Bd}{{A`c}{{Ah{Af}}}Bd}{{Abc}{{Ah{Af}}}Bd}{{Adc}{{Ah{Af}}}Bd}{{Alc}{{Ah{Af}}}Bd}{ce{}{}}000000000000{c{{Ah{e}}}{}{}}0000000000000{cBf{}}000000```````````````````````````````````````````````````````````{{}h}00000000000000000``333333333333333333333333333333333333{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{{ce}Af{}{}}00000000000000000`{{}Bj}{{}D`}{{}Dd}{c{{Ah{Bh}}}Aj}{c{{Ah{Bj}}}Aj}{c{{Ah{Bl}}}Aj}{c{{Ah{Bn}}}Aj}{c{{Ah{C`}}}Aj}{c{{Ah{Cb}}}Aj}{c{{Ah{Cd}}}Aj}{c{{Ah{Cf}}}Aj}{c{{Ah{Ch}}}Aj}{c{{Ah{Cj}}}Aj}{c{{Ah{Cl}}}Aj}{c{{Ah{Cn}}}Aj}{c{{Ah{D`}}}Aj}{c{{Ah{Db}}}Aj}{c{{Ah{Dd}}}Aj}{c{{Ah{Df}}}Aj}{c{{Ah{Dh}}}Aj}{c{{Ah{Dj}}}Aj}{{BhAn}B`}{{BjAn}B`}{{D`An}B`}{{DbAn}B`}{{DdAn}B`}{cc{}}00000000000000000`{{d{Dn{Dl}}}Bj}{{}Bb}00000000000000000{{Bhc}{{Ah{Af}}}Bd}{{Bjc}{{Ah{Af}}}Bd}{{Blc}{{Ah{Af}}}Bd}{{Bnc}{{Ah{Af}}}Bd}{{C`c}{{Ah{Af}}}Bd}{{Cbc}{{Ah{Af}}}Bd}{{Cdc}{{Ah{Af}}}Bd}{{Cfc}{{Ah{Af}}}Bd}{{Chc}{{Ah{Af}}}Bd}{{Cjc}{{Ah{Af}}}Bd}{{Clc}{{Ah{Af}}}Bd}{{Cnc}{{Ah{Af}}}Bd}{{D`c}{{Ah{Af}}}Bd}{{Dbc}{{Ah{Af}}}Bd}{{Ddc}{{Ah{Af}}}Bd}{{Dfc}{{Ah{Af}}}Bd}{{Dhc}{{Ah{Af}}}Bd}{{Djc}{{Ah{Af}}}Bd}{ce{}{}}00000000000000000`````{E`D`}```{{dEb}Bh}{{Bhd}{{Ah{EbAb}}}}````````{BjE`}444444444444444444`````{c{{Ah{e}}}{}{}}00000000000000000000000000000000000{cBf{}}00000000000000000``````````````````````````````{{}h}00000000``777777777777777777{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{{ce}Af{}{}}00000`{c{{Ah{Ed}}}Aj}{c{{Ah{Ef}}}Aj}{c{{Ah{Eh}}}Aj}{c{{Ah{Ej}}}Aj}{c{{Ah{El}}}Aj}{c{{Ah{F`}}}Aj}{c{{Ah{En}}}Aj}{c{{Ah{Fb}}}Aj}{{EnEn}f}``{{EdAn}B`}{{EfAn}B`}{{EhAn}B`}{{EnAn}B`}{cc{}}00000000{{{Fh{{Ff{Fd}}}}}Ef}{{{Fh{{Ff{Fd}}}}}En}````{{Enc}AfFj}```````````{{}Bb}00000000{{Edc}{{Ah{Af}}}Bd}{{Efc}{{Ah{Af}}}Bd}{{Ehc}{{Ah{Af}}}Bd}{{Ejc}{{Ah{Af}}}Bd}{{Elc}{{Ah{Af}}}Bd}{{F`c}{{Ah{Af}}}Bd}{{Flc}{{Ah{Af}}}Bd}{{Enc}{{Ah{Af}}}Bd}{{Fbc}{{Ah{Af}}}Bd}{ce{}{}}00000000```````{{EbEdFn{Dn{{G`{Fd}}}}}Ef}{{Gb{Dn{Fn}}}En}``{{Edc}AhGd}{{Efc}AhGd}{{Enc}AhGd}```{Ef{{Fh{{Ff{Fd}}}}}}{En{{Fh{{Ff{Fd}}}}}}777777```````{c{{Ah{e}}}{}{}}00000000000000000```{cBf{}}00000000`````````````{{dd}{{Ah{AfE`}}}}{Gf{{Ah{GfE`}}}}{{df}{{Ah{E`E`}}}}{d{{Ah{GhE`}}}}{{dd}f}{{}Gf}{{}{{G`{Gj}}}}{{}{{Ah{AfE`}}}}{d{{Ah{GlE`}}}}{{{G`{Gj}}}{{Ah{AfE`}}}}8````````{{}h}000`{ce{}{}}000000000{GnGn}{GlGl}{H`H`}{GfGf}{{ce}Af{}{}}000{{GnGn}Hb}{{H`H`}Hb}={c{{Ah{Gl}}}Aj}{c{{Ah{H`}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gj}}}Aj}{{GnGn}f}{{H`H`}f}{cc{}}0000{{{Fh{{Ff{Fd}}}}}Gn}{{{Fh{{Ff{Fd}}}}}Gl}{{{Fh{{Ff{Fd}}}}}H`}{{{Fh{{Ff{Fd}}}}}Gf}{{{Fh{{Ff{Fd}}}}}Gj}{{}Bb}000{{Glc}{{Ah{Af}}}Bd}{{H`c}{{Ah{Af}}}Bd}{{Gfc}{{Ah{Af}}}Bd}{{Gjc}{{Ah{Af}}}Bd}{ce{}{}}0000```{{GnGn}{{Dn{Hb}}}}{{H`H`}{{Dn{Hb}}}}{Gn{{Fh{{Ff{Fd}}}}}}{Gl{{Fh{{Ff{Fd}}}}}}{H`{{Fh{{Ff{Fd}}}}}}{Gf{{Fh{{Ff{Fd}}}}}}{Gj{{Fh{{Ff{Fd}}}}}}7777`{c{{Ah{e}}}{}{}}000000000{cBf{}}0000``{{}h}``::{GhGh}{{ce}Af{}{}}{c{{Ah{Gh}}}Aj}{cc{}}{{}Bb}{{Ghc}{{Ah{Af}}}Bd}{ce{}{}}0998{{dd}E`}","c":[],"p":[[8,"c_char",846],[5,"Principal",847],[1,"bool"],[5,"Type",848],[6,"TransferError",13],[6,"ApprovalError",13],[6,"BurnError",13],[6,"MintError",13],[6,"ExtCommonError",13],[6,"ExtTransferError",13],[1,"unit"],[6,"Result",849],[10,"Deserializer",850],[6,"InsertTransactionError",13],[5,"Formatter",851],[8,"Result",851],[5,"TypeId",848],[10,"Serializer",852],[5,"TypeId",853],[5,"TokenIdentifier",177],[5,"AccountIdentifier",177],[6,"User",177],[5,"ExtTransferArg",177],[6,"ExtTransferResult",177],[5,"ExtBalanceArg",177],[6,"ExtBalanceResult",177],[5,"AllowanceArg",177],[5,"ExtApproveArg",177],[5,"ExtAllowanceArg",177],[6,"ExtAllowanceResult",177],[6,"ExtBearerResult",177],[5,"ExtMetadataType",177],[5,"ExtFungibleMetadataType",177],[6,"ExtMetadata",177],[6,"ExtMetadataResult",177],[5,"ExtMintArg",177],[6,"ExtSupplyResult",177],[8,"Subaccount",854],[6,"Option",855],[5,"String",856],[1,"u128"],[6,"TransactionType",508],[5,"Transaction",508],[5,"TransferArg",508],[5,"MintArg",508],[5,"BurnArg",508],[5,"Approval",508],[5,"InitArg",508],[5,"ApprovalArg",508],[1,"u8"],[1,"slice"],[6,"Cow",857],[10,"Hasher",858],[5,"Standard",508],[1,"u64"],[5,"Vec",859],[5,"Account",854],[10,"Serializer",860],[5,"ReputationModuleMetadata",734],[5,"AchievementMetadata",828],[5,"Standard",734],[5,"CanisterPermission",734],[5,"StorablePrincipal",734],[5,"PrincipalSum",734],[6,"Ordering",861],[15,"GenericError",158],[15,"GenericBatchError",158],[15,"Unauthorized",158],[15,"GenericError",163],[15,"GenericBatchError",163],[15,"GenericError",167],[15,"GenericBatchError",167],[15,"Duplicate",171],[15,"GenericError",171],[15,"GenericBatchError",171],[15,"CreatedInFuture",171],[8,"TransferResult",508],[8,"MintResult",508],[8,"BurnResult",508],[8,"ApproveResult",508],[8,"SyncReceipt",508],[15,"Mint",711],[15,"Burn",711],[15,"Transfer",711],[15,"Approval",711]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
